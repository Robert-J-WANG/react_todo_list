{"ast":null,"code":"var _jsxFileName = \"/Users/aqiang/Desktop/My_Github/Upload/ReactProject/react_todo_list/src/components/Header/index.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Header extends Component {\n  constructor() {\n    super(...arguments);\n    //  键盘按键的回调\n    this.hanlderKeyUP = event => {\n      // 定义一个对象，对象里有两个属性keyCode，和target，然后将对象event赋值给自定的对象\n      // 获取键盘按键使用 event.key\n      const {\n        keyCode,\n        target\n      } = event;\n      if (keyCode !== 13) return;\n      if (target.value.trim() === \"\") {\n        alert(\"Please enter a valid name\");\n        return;\n      }\n\n      // 准备一个todo 对象,用于送数据\n      const todoObj = {\n        id: nanoid(),\n        name: target.value,\n        done: false\n      };\n      this.props.addTodo(todoObj);\n      // 清空输入框\n      target.value = \"\";\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-header\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyUp: this.hanlderKeyUP,\n        type: \"text\",\n        placeholder: \"Type Your Task Name, Press 'Enter' to Comfirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n}\n/* 子组件Header传递数据给父组件App:\n    1, 通过父组件使用props的方式，给子组件传递一个函数\n    2，子组件调用此函数，将数据通过函数参数的形式传递给父组件\n*/\n// 对接收的props，进行类型和必要性的限制\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired\n};","map":{"version":3,"names":["React","Component","PropTypes","nanoid","jsxDEV","_jsxDEV","Header","constructor","arguments","hanlderKeyUP","event","keyCode","target","value","trim","alert","todoObj","id","name","done","props","addTodo","render","className","children","onKeyUp","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","func","isRequired"],"sources":["/Users/aqiang/Desktop/My_Github/Upload/ReactProject/react_todo_list/src/components/Header/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid'\nimport './index.css'\n\nexport default class Header extends Component {\n  /* 子组件Header传递数据给父组件App:\n      1, 通过父组件使用props的方式，给子组件传递一个函数\n      2，子组件调用此函数，将数据通过函数参数的形式传递给父组件\n  */\n // 对接收的props，进行类型和必要性的限制\n  static propTypes = {\n    addTodo:PropTypes.func.isRequired,\n  }\n\n  //  键盘按键的回调\n  hanlderKeyUP=(event) => {\n    // 定义一个对象，对象里有两个属性keyCode，和target，然后将对象event赋值给自定的对象\n    // 获取键盘按键使用 event.key\n    const{keyCode, target}=event\n    if(keyCode!==13)return\n    if(target.value.trim() === \"\"){\n      alert(\"Please enter a valid name\")\n      return\n    }\n\n    // 准备一个todo 对象,用于送数据\n    const todoObj={\n      id:nanoid(),\n      name:target.value,\n      done:false,}\n    this.props.addTodo(todoObj)\n    // 清空输入框\n    target.value=\"\"\n  }\n\n  render() {\n    return (\n      <div className=\"todo-header\">\n        {/* 绑定键盘事件*/}\n\t\t\t\t<input onKeyUp={this.hanlderKeyUP} type=\"text\" placeholder=\"Type Your Task Name, Press 'Enter' to Comfirm\"/>\n\t\t\t</div>\n    )\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,eAAe,MAAMC,MAAM,SAASL,SAAS,CAAC;EAAAM,YAAA;IAAA,SAAAC,SAAA;IAU5C;IAAA,KACAC,YAAY,GAAEC,KAAK,IAAK;MACtB;MACA;MACA,MAAK;QAACC,OAAO;QAAEC;MAAM,CAAC,GAACF,KAAK;MAC5B,IAAGC,OAAO,KAAG,EAAE,EAAC;MAChB,IAAGC,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAC;QAC5BC,KAAK,CAAC,2BAA2B,CAAC;QAClC;MACF;;MAEA;MACA,MAAMC,OAAO,GAAC;QACZC,EAAE,EAACd,MAAM,CAAC,CAAC;QACXe,IAAI,EAACN,MAAM,CAACC,KAAK;QACjBM,IAAI,EAAC;MAAM,CAAC;MACd,IAAI,CAACC,KAAK,CAACC,OAAO,CAACL,OAAO,CAAC;MAC3B;MACAJ,MAAM,CAACC,KAAK,GAAC,EAAE;IACjB,CAAC;EAAA;EAEDS,MAAMA,CAAA,EAAG;IACP,oBACEjB,OAAA;MAAKkB,SAAS,EAAC,aAAa;MAAAC,QAAA,eAE9BnB,OAAA;QAAOoB,OAAO,EAAE,IAAI,CAAChB,YAAa;QAACiB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC;MAA+C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxG,CAAC;EAEP;AACF;AAtCE;AACF;AACA;AACA;AACC;AALoBzB,MAAM,CAMlB0B,SAAS,GAAG;EACjBX,OAAO,EAACnB,SAAS,CAAC+B,IAAI,CAACC;AACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}