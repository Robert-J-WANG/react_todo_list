[{"/Users/aqiang/Desktop/My_Github/Upload/ReactProject/react_todo_list/src/index.js":"1","/Users/aqiang/Desktop/My_Github/Upload/ReactProject/react_todo_list/src/App.js":"2","/Users/aqiang/Desktop/My_Github/Upload/ReactProject/react_todo_list/src/reportWebVitals.js":"3","/Users/aqiang/Desktop/My_Github/Upload/ReactProject/react_todo_list/src/components/List/index.jsx":"4","/Users/aqiang/Desktop/My_Github/Upload/ReactProject/react_todo_list/src/components/Footer/index.jsx":"5","/Users/aqiang/Desktop/My_Github/Upload/ReactProject/react_todo_list/src/components/Header/index.jsx":"6","/Users/aqiang/Desktop/My_Github/Upload/ReactProject/react_todo_list/src/components/Item/index.jsx":"7"},{"size":535,"mtime":1686965454563,"results":"8","hashOfConfig":"9"},{"size":3447,"mtime":1686969977017,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1686964187339,"results":"11","hashOfConfig":"9"},{"size":1104,"mtime":1686970058282,"results":"12","hashOfConfig":"9"},{"size":1265,"mtime":1686966440285,"results":"13","hashOfConfig":"9"},{"size":1343,"mtime":1686966440288,"results":"14","hashOfConfig":"9"},{"size":1527,"mtime":1686969100423,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19vxvkj",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aqiang/Desktop/My_Github/Upload/ReactProject/react_todo_list/src/index.js",[],[],"/Users/aqiang/Desktop/My_Github/Upload/ReactProject/react_todo_list/src/App.js",[],[],"/Users/aqiang/Desktop/My_Github/Upload/ReactProject/react_todo_list/src/reportWebVitals.js",[],[],"/Users/aqiang/Desktop/My_Github/Upload/ReactProject/react_todo_list/src/components/List/index.jsx",["38","39"],[],"import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Item from '../Item'\nimport './index.css'\n\nexport default class List extends Component {\n\n  // 对接收的props，进行类型和必要性的限制\n  static propTypes = {\n    todolists:PropTypes.array.isRequired,\n    updateTodo:PropTypes.func.isRequired,\n  }\n\n  \n  render() {\n    /*父组件App把存储在state里的动态数据，通过设置props的方式，传递给子组件List*/\n    // 子组件List获取属性props的数据\n    const {todolists, updateTodo, deleteTodo} =this.props\n\n    return (\n      <ul className=\"todo-main\">\n        {/*把属性数据遍历获取所有数据*/}\n        {/*在jsx文件在写JS代码，需要加花括号包裹一下*/}\n        {\n          todolists.map((todolist) => {\n            {/*组件List通过设置属性props，将数据传递给他的字组件Item*/}\n            {/*传递所有的props，使用{...todolist}*/}\n            return <Item  key={todolist.id} {...todolist} updateTodo={updateTodo} deleteTodo={deleteTodo}/>\n          })\n        }\n\t\t\t</ul>\n    )\n  }\n}\n","/Users/aqiang/Desktop/My_Github/Upload/ReactProject/react_todo_list/src/components/Footer/index.jsx",[],[],"/Users/aqiang/Desktop/My_Github/Upload/ReactProject/react_todo_list/src/components/Header/index.jsx",[],[],"/Users/aqiang/Desktop/My_Github/Upload/ReactProject/react_todo_list/src/components/Item/index.jsx",[],[],{"ruleId":"40","severity":1,"message":"41","line":26,"column":13,"nodeType":"42","messageId":"43","endLine":26,"endColumn":52},{"ruleId":"40","severity":1,"message":"41","line":27,"column":13,"nodeType":"42","messageId":"43","endLine":27,"endColumn":45},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock"]